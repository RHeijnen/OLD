<?xml version="1.0" encoding="UTF-8"?>


<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.rheijnen.workspace</groupId>
    <artifactId>workspace</artifactId>
    <version>1.0-SNAPSHOT</version>
    <properties>
        <!-- The final name for the JAR that you can find in target directory-->
        <jar.final.name>Summoners_War_AutoFarmer_v01</jar.final.name>
        <!--  the default class that has the public static void main(String[]) method -->
        <main.class>FXController.App</main.class>
    </properties>
<!--repoos -->
    <repositories>


        <repository>
            <id>com.sikulix</id>
            <name>com.sikulix</name>
            <url>https://oss.sonatype.org/content/groups/public</url>
            <layout>default</layout>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>

    </repositories>
    <dependencies>
        <!-- Add your dependencies here
      <dependency>
        <groupId>{groupId}</groupId>
        <artifactId>{artifactIT}</artifactId>
        <version>{version}</version>
      </dependency>
     -->
<!-- SikuliX -->
            <dependency>
                <groupId>com.sikulix</groupId>
                <artifactId>sikulixapi</artifactId>
                <version>1.1.0</version>
            </dependency>

        <dependency>
            <groupId>com.sikulix</groupId>
            <artifactId>sikulixlibswin</artifactId>
            <version>1.1.0</version>
        </dependency>


    </dependencies>
    <build>
        <finalName>${jar.final.name}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>${main.class}</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/classes/lib</outputDirectory>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <excludeGroupIds>
                                junit,org.hamcrest,org.mockito,org.powermock,${project.groupId}
                            </excludeGroupIds>
                        </configuration>
                    </execution>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>sources</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <verbose>true</verbose>
                    <detail>true</detail>
                    <outputDirectory>${project.build.directory}</outputDirectory>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>